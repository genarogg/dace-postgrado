[providers]
php = "8.2"
node = "20"

[phases.setup]
nixPkgs = [
  "...",
  "nginx",
  "curl",
  "unzip",
  "git",
  "sqlite"
]

# Extensiones de PHP requeridas
aptPkgs = [
  "php8.2-ctype",
  "php8.2-curl", 
  "php8.2-dom",
  "php8.2-fileinfo",
  "php8.2-filter",
  "php8.2-hash",
  "php8.2-mbstring",
  "php8.2-openssl",
  "php8.2-pcre",
  "php8.2-pdo",
  "php8.2-pdo-sqlite",
  "php8.2-session",
  "php8.2-tokenizer",
  "php8.2-xml",
  "php8.2-zip",
  "php8.2-gd",
  "php8.2-intl",
  "php8.2-bcmath"
]

[phases.install]
dependsOn = ["setup"]
cmds = [
  # Instalar dependencias de PHP
  "composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist",
  
  # Instalar dependencias de Node.js (incluyendo devDependencies para build)
  "npm ci"
]

[phases.build]
dependsOn = ["install"]
cmds = [
  # Crear archivo .env si no existe (usando .env.example como base)
  "cp .env.example .env || true",
  
  # Generar key de aplicación
  "php artisan key:generate --force",
  
  # Crear base de datos SQLite si no existe
  "touch database/database.sqlite",
  
  # Construir assets de frontend con Vite ANTES de cachear vistas
  "npm run build",
  
  # Optimizar configuración para producción
  "php artisan config:cache",
  "php artisan route:cache",
  "php artisan view:cache",
  
  # Ejecutar migraciones
  "php artisan migrate --force --no-interaction",
  
  # Crear usuario admin por defecto para Filament Shield
  "php artisan shield:install --fresh --minimal || true",
  
  # Limpiar caches de desarrollo
  "php artisan optimize:clear",
  
  # Limpiar node_modules para reducir tamaño de imagen
  "rm -rf node_modules"
]

[phases.start]
cmd = "php artisan serve --host=0.0.0.0 --port=${PORT:-8000}"

# Variables de entorno por defecto
[variables]
APP_ENV = "production"
APP_DEBUG = "false"
APP_KEY = ""
DB_CONNECTION = "sqlite"
DB_DATABASE = "/app/database/database.sqlite"
CACHE_DRIVER = "file"
SESSION_DRIVER = "file"
QUEUE_CONNECTION = "database"
LOG_CHANNEL = "stderr"
LOG_STDERR_FORMATTER = "Monolog\\Formatter\\JsonFormatter"

# Configuración específica para Filament
FILAMENT_FILESYSTEM_DISK = "local"

# Optimizaciones de PHP para producción
[variables.php]
memory_limit = "512M"
max_execution_time = "300"
upload_max_filesize = "64M"
post_max_size = "64M"

# Archivos estáticos que deben ser servidos
[staticAssets]
"public" = "/"

# Configuración específica para Vite
[variables.vite]
VITE_APP_NAME = "${APP_NAME}"